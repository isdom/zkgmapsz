<?page title="new page title" contentType="text/html;charset=UTF-8"?>
<zk>

	<div width="1200px">
		New Legal Permanent Residents in the U.S. (per year) vs. U.S.
		History
		<zscript><![CDATA[
	import java.util.Calendar;
	import org.zkforge.timeplot.geometry.*;
	import org.zkforge.timeplot.data.*;
	import org.zkforge.timeplot.operator.*;
	import org.zkforge.timeline.data.OccurEvent;
	import org.zkoss.zul.*;
	
	ValueGeometry vg = new DefaultValueGeometry();
	vg.setGridColor("#000000");
	TimeGeometry tg = new DefaultTimeGeometry();
	tg.setAxisLabelsPlacement("bottom");
	
	ListModelList lml = new ListModelList();
	ListModelList eml = new ListModelList();
	List datas = new ArrayList();
	int year = 1850;
	for (int i = 0; i < 100; i++) {
		PlotData pd = new PlotData();
		Calendar cal = Calendar.getInstance();
		cal.set(Calendar.YEAR, year);
		pd.setTime(cal.getTime());
		pd.setValue((int) (100000 * Math.random()));
		datas.add(pd);
		year += 2;
	}
	lml.addAll(datas);
	
	List event = new ArrayList();
	year = 1850;
	for (int i = 0; i < 3; i++) {
		OccurEvent e = new OccurEvent();
		Calendar cal2 = Calendar.getInstance();
		cal2.set(Calendar.YEAR, year + (int) (Math.random() * 10));
		Calendar cal3 = Calendar.getInstance();
		cal3.set(Calendar.YEAR, year + 5 + (int) (Math.random() * 10));
		Calendar cal4 = Calendar.getInstance();
		cal4.set(Calendar.YEAR, year + 10 + (int) (Math.random() * 10));
		Calendar cal5 = Calendar.getInstance();
		cal5.set(Calendar.YEAR, year + 15 + (int) (Math.random() * 10));
		e.setStart(cal2.getTime());
		e.setEnd(cal5.getTime());
		e.setLatestStart(cal3.getTime());
		e.setEarliestEnd(cal4.getTime());
		e.setText("--------new" + i + "---------");
		event.add(e);
		year += 30;
	}
	eml.addAll(event);
	
	PlotData pd = new PlotData();
	Calendar cal = Calendar.getInstance();
	cal.set(Calendar.YEAR, 1960);
	pd.setTime(cal.getTime());
	pd.setValue(999999);
	void addData() {
		lml.add(pd);
	}
	void removeData() {
		lml.remove(pd);
	}	
	
	OccurEvent e = new OccurEvent();
	Calendar cal2 = Calendar.getInstance();
	cal2.set(Calendar.YEAR, 1998);
	Calendar cal3 = Calendar.getInstance();
	cal3.set(Calendar.YEAR, 2000);
	Calendar cal4 = Calendar.getInstance();
	cal4.set(Calendar.YEAR, 2002);
	Calendar cal5 = Calendar.getInstance();
	cal5.set(Calendar.YEAR, 2004);
	e.setStart(cal2.getTime());
	e.setEnd(cal5.getTime());
	e.setLatestStart(cal3.getTime());
	e.setEarliestEnd(cal4.getTime());
	e.setText("--------new---------");
	
	void addEvent() {
		eml.add(e);
	}
	void removeEvent() {
		eml.remove(e);
	}
	void data() {
		ListModelList lml2 = new ListModelList();
		List datas = new ArrayList();
		int year = 1850;
		for (int i = 0; i < 150; i++) {
			PlotData pd = new PlotData();
			Calendar cal = Calendar.getInstance();
			cal.set(Calendar.YEAR, year);
			pd.setTime(cal.getTime());
			pd.setValue((int) (100000 * Math.random()));
			datas.add(pd);
			year += 2;
		}
		lml2.addAll(datas);
		plot2.setDataModel(lml2);
	}
	void event() {
		ListModelList eml2 = new ListModelList();
		List event = new ArrayList();
		int year = 1850;
		for (int i = 0; i < 5; i++) {
			OccurEvent e = new OccurEvent();

			Calendar cal2 = Calendar.getInstance();
			cal2.set(Calendar.YEAR, year + (int) (Math.random() * 10));
			Calendar cal3 = Calendar.getInstance();
			cal3.set(Calendar.YEAR, year + 5 + (int) (Math.random() * 10));
			Calendar cal4 = Calendar.getInstance();
			cal4.set(Calendar.YEAR, year + 10 + (int) (Math.random() * 10));
			Calendar cal5 = Calendar.getInstance();
			cal5.set(Calendar.YEAR, year + 15 + (int) (Math.random() * 10));
			e.setStart(cal2.getTime());
			e.setEnd(cal5.getTime());
			e.setLatestStart(cal3.getTime());
			e.setEarliestEnd(cal4.getTime());
			e.setText("--------new" + i + "---------");
			event.add(e);
			year += 30;
		}
		eml2.addAll(event);
		plot1.setEventModel(eml2);
	}
]]></zscript>


		<timeplot width="1000px" height="300px">

			<plotinfo id="plot1" eventModel="${eml}"
				timeGeometry="${tg}" lineColor="#B9121B" />

			<plotinfo id="plot2" dataModel="${lml}"	
				 timeGeometry="${tg}" lineColor="#5C832F" 
				dotColor="#000000"  showValues="true"/>

		</timeplot>
		
		<button label="addData" onClick="addData()" />
		<button label="removeData" onClick="removeData()" />
		<button label="addEvent" onClick="addEvent()" />
		<button label="removeEvent" onClick="removeEvent()" />
		<button label="data" onClick="data()" />
		<button label="event" onClick="event()" />
		
	</div>
	<toolbarbutton href="/componentTEST_timeplot.zul" label="previous" />
	<toolbarbutton href="/componentTEST5(ckeditor).zul" label="next" />

</zk>